{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","color","img","nilai1","nilai2","menu","setState","react_default","a","createElement","className","type","placeholder","value","onChange","onchangeHandler","bind","parseInt","src","width","event","target","_this2","id","items","map","index","style","concat","onClick","clicked","key","info","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"yNA0IeA,qBArIb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,KAAO,OACPC,MAAQ,OACRC,IAAM,WACNC,OAAS,KACTC,OAAS,MARKZ,uEA0DVa,GACNV,KAAKW,SAAS,CACZN,KAAOK,EAAKL,KACZC,MAAQI,EAAKJ,MACbC,IAAMG,EAAKH,mCAIVF,GACH,MAAW,cAARA,EAECO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAW,YAAYf,KAAKI,MAAME,OAAQN,KAAKI,MAAMC,MACzDO,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOE,KAAO,SAASX,KAAK,SAASY,YAAY,UAC/CC,MAAOlB,KAAKI,MAAMI,OAAQW,SAAUnB,KAAKoB,gBAAgBC,KAAKrB,QANpE,IAOIY,EAAAC,EAAAC,cAAA,SAAOE,KAAO,SAASX,KAAK,SAASY,YAAY,UAC/CC,MAAOlB,KAAKI,MAAMK,OAAQU,SAAUnB,KAAKoB,gBAAgBC,KAAKrB,QARpE,IAUIY,EAAAC,EAAAC,cAAA,YAAOQ,SAAStB,KAAKI,MAAMI,QAAWc,SAAStB,KAAKI,MAAMK,UAO9DG,EAAAC,EAAAC,cAAA,yBACaF,EAAAC,EAAAC,cAAA,QAAMC,UAAW,YAAYf,KAAKI,MAAME,OAAQN,KAAKI,MAAMC,MACpEO,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKS,IAAKvB,KAAKI,MAAMG,IAAKiB,MAAM,+CAM5BC,GACZzB,KAAKW,SAAS,CACZH,OAASiB,EAAMC,OAAOR,yCAIjB,IAAAS,EAAA3B,KACP,OAEEY,EAAAC,EAAAC,cAAA,OAAKc,GAAG,OAEJhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOf,KAAKJ,MAAMiC,MAAMC,IAAI,SAACpB,EAAKqB,GAC/C,IAAIC,EAAM,OAMV,OAJIL,EAAKvB,MAAME,QAAUI,EAAKJ,QAC5B0B,EAAK,GAAAC,OAAMD,EAAN,eAGApB,EAAAC,EAAAC,cAAA,KACDC,UAAWiB,EAAM,IAAItB,EAAKJ,MAC1B4B,QAASP,EAAKQ,QAAQd,KAAKM,EAAMjB,GACjC0B,IAAKL,GACJrB,EAAKL,SAKdO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZf,KAAKqC,KAAKrC,KAAKI,MAAMC,eA7HhBiC,cCgClBC,IAASC,OAAO5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAKZ,MA9BP,CACV,CACIxB,KAAO,MACPC,MAAQ,QACRC,IAAM,gBAEV,CACIF,KAAO,SACPC,MAAQ,SACRC,IAAM,gBAEV,CACIF,KAAO,QACPC,MAAQ,QACRC,IAAM,aAEV,CACIF,KAAO,OACPC,MAAQ,OACRC,IAAM,iBAEV,CACIF,KAAO,aACPC,MAAQ,OACRC,IAAM,OAMwBmC,SAASC,eAAe","file":"static/js/main.8b025250.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      name : \"Home\",\r\n      color : \"grey\",\r\n      img : \"home.jpg\",\r\n      nilai1 : null,\r\n      nilai2 : null,\r\n      /*operator : null,\r\n      hasil : null*/\r\n    };\r\n  };\r\n\r\n  /*handleSubmit(e) {\r\n    e.preventDefault() ;\r\n\r\n    const nilai1 = parseInt(this.refs.nilai1.value);\r\n    const nilai2 = parseInt(this.refs.nilai2.value);\r\n    const operator = this.refs.operator.value;\r\n\r\n    var hasil;\r\n    switch (operator){\r\n      case '+':\r\n        hasil = nilai1 + nilai2;\r\n        break;\r\n      case '-':\r\n        hasil = nilai1 - nilai2;\r\n        break;\r\n      case '*':\r\n        hasil = nilai1 * nilai2;\r\n        break;\r\n      case '/':\r\n        hasil = nilai1 / nilai2;\r\n        break;\r\n    }\r\n\r\n    this.setState({nilai1, nilai2, operator, hasil});\r\n\r\n    this.refs.nilai1.value = null;\r\n    this.refs.nilai2.value = null;\r\n  }\r\n\r\n  renderHasil(){\r\n    const {nilai1, nilai2, operator, hasil} = this.state;\r\n\r\n    if(this.state.hasil){\r\n      return (\r\n        <div>\r\n          <br/>\r\n          <p className=\"alert alert-success\">\r\n            {nilai1+operator+nilai2+'='+hasil}\r\n          </p>\r\n        </div>\r\n      )\r\n    }\r\n  }*/\r\n\r\n  clicked(menu){\r\n    this.setState({\r\n      name : menu.name,\r\n      color : menu.color,\r\n      img : menu.img\r\n    });\r\n  }\r\n\r\n  info(name){\r\n    if(name == 'Calculator'){\r\n      return (\r\n        <div>\r\n          <span className={\"selected \"+this.state.color}>{this.state.name}</span>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <input type = \"number\" name=\"nilai1\" placeholder=\"angka 1\" \r\n              value={this.state.nilai1} onChange={this.onchangeHandler.bind(this)}/>+\r\n            <input type = \"number\" name=\"nilai2\" placeholder=\"angka 2\"\r\n              value={this.state.nilai2} onChange={this.onchangeHandler.bind(this)}/>=\r\n\r\n            <span>{parseInt(this.state.nilai1) +  parseInt(this.state.nilai2)}</span>\r\n        </div>\r\n      );\r\n      \r\n    } else {\r\n\r\n      return (\r\n        <div>\r\n          ini adalah <span className={\"selected \"+this.state.color}>{this.state.name}</span>\r\n            <br></br>\r\n            <br></br>\r\n            <img src={this.state.img} width=\"200\"></img>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  changeHandler(event){\r\n    this.setState({\r\n      nilai1 : event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\t\r\n      <div id=\"app\">\r\n      \r\n          <nav className=\"nav\">{this.props.items.map((menu,index) => {\r\n            var style='menu';\r\n\r\n            if (this.state.color === menu.color){\r\n              style = `${style} is-active`;\r\n            }\r\n\r\n            return <a\r\n                  className={style+\" \"+menu.color}\r\n                  onClick={this.clicked.bind(this, menu)}\r\n                  key={index}>\r\n                  {menu.name}\r\n                </a>;\r\n          })}\r\n          </nav>\r\n\r\n          <div className=\"info\">\r\n            {this.info(this.state.name)}\r\n              \r\n          </div>\r\n      </div>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Custom.css';\r\nimport App from './App';\r\n\r\n\r\nconst items = [\r\n    {\r\n        name : \"Red\",\r\n        color : \"Merah\",\r\n        img : \"redberry.jpg\"\r\n    },\r\n    {\r\n        name : \"Yellow\",\r\n        color : \"Kuning\",\r\n        img : \"yellrose.jpg\"\r\n    },\r\n    {\r\n        name : \"Green\",\r\n        color : \"Hijau\",\r\n        img : \"green.jpg\"\r\n    },\r\n    {\r\n        name : \"Blue\",\r\n        color : \"Biru\",\r\n        img : \"blueberry.jpg\"\r\n    },\r\n    {\r\n        name : \"Calculator\",\r\n        color : \"Grey\",\r\n        img : \"\"\r\n    }\r\n\r\n];\r\n\r\n\r\nReactDOM.render(<App items={items}/>, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}